
// import React, { useState, useEffect } from "react";
// import axios from "axios";
// import TextField from "@mui/material/TextField";
// import List from "@mui/material/List";
// import ListItem from "@mui/material/ListItem";
// import ListItemText from "@mui/material/ListItemText";

// const App = () => {
//   const [data, setData] = useState([]);
//   const [searchTerm, setSearchTerm] = useState("");
//   const [searchResults, setSearchResults] = useState([]);
//   const [touched, setTouched] = useState(false);

//   useEffect(() => {
//     const fetchData = async () => {
//       const result = await axios.get(
//         "https://jsonplaceholder.typicode.com/posts"
//       );
//       setData(result.data);
//     };
//     fetchData();
//   }, []);

//   useEffect(() => {
//     if (searchTerm.length >= 3) {
//       const results = data.filter((item) =>
//         item.title.toLowerCase().includes(searchTerm.toLowerCase())
//       );
//       setSearchResults(results);
//     } else {
//       setSearchResults([]);
//     }
//   }, [data, searchTerm]);

//   const handleChange = (event) => {
//     setSearchTerm(event.target.value);
//   };

//   const handleTouch = () => {
//     setTouched(true);
//   };

//   return (
//     <div>
//       <TextField
//         id="search-field"
//         label="Search"
//         variant="outlined"
//         value={searchTerm}
//         onChange={handleChange}
//         onBlur={handleTouch}
//         error={touched && searchTerm.length < 1}
//         helperText={
//           touched && searchTerm.length < 1
//             ? "This field is required"
//             : searchTerm.length < 3
//             ? "Please enter at least 3 characters"
//             : "Top 100 films as rated by IMDb users."
//         }
//       />
//       {searchResults.length > 0 && (
//         <List>
//           {searchResults.map((item) => (
//             <ListItem key={item.id}>
//               <ListItemText primary={item.title} />
//             </ListItem>
//           ))}
//         </List>
//       )}
//     </div>
//   );
// };

// export default App;

// import React, { useState, useEffect } from "react";
// import axios from "axios";
// import TextField from "@mui/material/TextField";
// import List from "@mui/material/List";
// import ListItem from "@mui/material/ListItem";
// import ListItemText from "@mui/material/ListItemText";

// const App = () => {
//   const [data, setData] = useState([]);
//   const [searchTerm, setSearchTerm] = useState("");
//   const [searchResults, setSearchResults] = useState([]);
//   const [touched, setTouched] = useState(false);

//   useEffect(() => {
//     const fetchData = async () => {
//       const result = await axios.get(
//         "https://jsonplaceholder.typicode.com/posts"
//       );
//       setData(result.data);
//     };
//     fetchData();
//   }, []);

//   useEffect(() => {
//     if (searchTerm.length >= 3) {
//       const results = data.filter((item) =>
//         item.title.toLowerCase().includes(searchTerm.toLowerCase())
//       );
//       setSearchResults(results);
//     } else {
//       setSearchResults([]);
//     }
//   }, [data, searchTerm]);

//   const handleChange = (event) => {
//     setSearchTerm(event.target.value);
//   };

//   const handleBlur = () => {
//     setTouched(true);
//   };

//   return (
//     <div>
//       <TextField
//         id="search-field"
//         label="Search"
//         variant="outlined"
//         value={searchTerm}
//         onChange={handleChange}
//         onBlur={handleBlur}
//         required={touched}
//         error={touched && (searchTerm.length === 0 || searchTerm.length < 3)}
//         helperText={
//           touched && (searchTerm.length === 0 || searchTerm.length < 3)
//             ? "Please enter at least 3 characters"
//             : null
//         }
//       />
//       {searchResults.length > 0 && (
//         <List>
//           {searchResults.map((item) => (
//             <ListItem key={item.id}>
//               <ListItemText primary={item.title} />
//             </ListItem>
//           ))}
//         </List>
//       )}
//     </div>
//   );
// };

// export default App;
// ===============================================================================

// import React, { useState, useEffect } from "react";
// import axios from "axios";

// const App = () => {
//   const [data, setData] = useState([]);
//   const [searchTerm, setSearchTerm] = useState("");
//   const [searchResults, setSearchResults] = useState([]);
//   const [touched, setTouched] = useState(false);

//   useEffect(() => {
//     const fetchData = async () => {
//       const result = await axios.get(
//         "https://jsonplaceholder.typicode.com/posts"
//       );
//       setData(result.data);
//     };
//     fetchData();
//   }, []);

//   useEffect(() => {
//     if (searchTerm.length >= 3) {
//       const results = data.filter((item) =>
//         item.title.toLowerCase().includes(searchTerm.toLowerCase())
//       );
//       setSearchResults(results);
//     } else {
//       setSearchResults([]);
//     }
//   }, [data, searchTerm]);

//   const handleChange = (event) => {
//     setSearchTerm(event.target.value);
//   };

//   const handleBlur = () => {
//     setTouched(true);
//   };

//   return (
//     <div style={{ display: "flex", flexDirection: "column" }}>
//       <label htmlFor="search-field" style={{ marginBottom: "5px" }}>
//         Search:
//       </label>
//       <input
//         id="search-field"
//         type="text"
//         value={searchTerm}
//         onChange={handleChange}
//         onBlur={handleBlur}
//         required={touched}
//         style={{
//           width: "50%",
//           padding: "5px",
//           fontSize: "1rem",
//           borderRadius: "5px",
//           border: "2px solid",
//           borderColor:
//             touched && (searchTerm.length === 0 || searchTerm.length < 3)
//               ? "red"
//               : "black"
//         }}
//       />
//       {touched && (searchTerm.length === 0 || searchTerm.length < 3) && (
//         <p style={{ color: "red", marginTop: "5px" }}>
//           Please enter at least 3 characters
//         </p>
//       )}
//       {searchResults.length > 0 && (
//         <ul style={{ marginTop: "10px" }}>
//           {searchResults.map((item) => (
//             <li key={item.id} style={{ marginBottom: "5px" }}>
//               {item.title}
//             </li>
//           ))}
//         </ul>
//       )}
//     </div>
//   );
// };

// export default App;

// import * as React from "react";
// import TextField from "@mui/material/TextField";
// import Autocomplete from "@mui/material/Autocomplete";

// const top100Films = [
//   { label: "The Shawshank Redemption", year: 1994 },
//   { label: "The Godfather", year: 1972 },
//   { label: "The Godfather: Part II", year: 1974 },
//   { label: "The Dark Knight", year: 2008 },
//   { label: "12 Angry Men", year: 1957 },
//   { label: "Schindler's List", year: 1993 },
//   { label: "Pulp Fiction", year: 1994 },
//   { label: "Monty Python and the Holy Grail", year: 1975 }
// ];

// export default function ComboBox() {
//   const [inputValue, setInputValue] = React.useState("");
//   const [options, setOptions] = React.useState([]);
//   const [error, setError] = React.useState(false);

//   const filterOptions = (options, state) => {
//     return options.filter((option) =>
//       option.label.toLowerCase().includes(state.inputValue.toLowerCase())
//     );
//   };

//   React.useEffect(() => {
//     if (inputValue.length >= 3) {
//       const filteredOptions = filterOptions(top100Films, { inputValue });
//       setOptions(filteredOptions);
//       setError(filteredOptions.length === 0);
//     } else {
//       setOptions([]);
//       setError(inputValue.length > 0);
//     }
//   }, [inputValue]);

//   const handleInputChange = (event) => {
//     setInputValue(event.target.value);
//   };

//   const handleBlur = () => {
//     if (inputValue.length === 0) {
//       setError(true);
//     } else if (inputValue.length < 3) {
//       setError(true);
//     } else {
//       setError(false);
//     }
//   };

//   return (
//     <div
//       style={{
//         display: "flex",
//         alignItems: "center",
//         justifyContent: "center"
//       }}
//     >
//       <Autocomplete
//         disablePortal
//         id="combo-box-demo"
//         options={options}
//         filterOptions={filterOptions}
//         getOptionLabel={(option) => option.label}
//         sx={{ width: 300 }}
//         renderInput={({ inputProps, ...params }) => (
//           <TextField
//             {...params}
//             {...inputProps}
//             size="small"
//             label="Movie"
//             value={inputValue}
//             onChange={handleInputChange}
//             onBlur={handleBlur}
//             error={error}
//             helperText={
//               error
//                 ? inputValue.length === 0
//                   ? "This field is required"
//                   : "Please enter at least 3 characters"
//                 : "Top 100 films as rated by IMDb users."
//             }
//           />
//         )}
//       />{" "}
//     </div>
//   );
// }
